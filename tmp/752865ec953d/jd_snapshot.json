{
  "title": "Associate / Junior Generative AI Engineer (Fresher)",
  "must_haves": [
    "python",
    "transformers",
    "torch",
    "langchain",
    "sentence-transformers",
    "chromadb",
    "rest apis",
    "json",
    "jupyter notebooks",
    "data preprocessing",
    "text embeddings",
    "tokenization",
    "neural networks",
    "rag",
    "embeddings",
    "vector search",
    "fine-tuning",
    "model evaluation",
    "hugging face",
    "openai api",
    "nosql",
    "vector databases",
    "fastapi",
    "flask",
    "cloud services"
  ],
  "required": [],
  "preferred": [],
  "responsibilities": [
    "design and implement llm-powered applications using frameworks such as langchain, llamaindex, or haystack.",
    "develop prompt engineering pipelines and retrieval-augmented generation (rag) workflows.",
    "work with vector databases (faiss, chroma, pinecone, weaviate, milvus) for semantic search and document retrieval.",
    "fine-tune or adapt open-source llms (llama, mistral, falcon, gemma, etc.) for domain-specific tasks.",
    "integrate ai apis (openai, anthropic, google gemini, etc.) into web or backend systems.",
    "collaborate with backend teams to deploy ai models using fastapi, flask, or streamlit.",
    "analyze and evaluate model performance (precision, recall, bleu, rouge, perplexity, etc.).",
    "write efficient, production-quality python code for data preprocessing, model integration, and automation.",
    "stay up-to-date with advancements in generative ai, transformer architectures, and mlops practices."
  ],
  "hard_gates": {
    "degree_required": true,
    "min_years": 0,
    "license": [],
    "work_auth": null,
    "clearance": null,
    "location_mode": "hybrid",
    "onsite_city": "bangalore",
    "shift": null,
    "travel": null
  },
  "evidence": {
    "must": {
      "python": "Proficiency in Python and experience with libraries like transformers, torch, langchain, sentence-transformers, chromadb.",
      "transformers": "Neural networks and transformers (BERT, GPT, etc.)",
      "torch": "experience with libraries like transformers, torch, langchain, sentence-transformers, chromadb.",
      "langchain": "experience with libraries like transformers, torch, langchain, sentence-transformers, chromadb.",
      "sentence-transformers": "experience with libraries like transformers, torch, langchain, sentence-transformers, chromadb.",
      "chromadb": "experience with libraries like transformers, torch, langchain, sentence-transformers, chromadb.",
      "rest apis": "Familiarity with REST APIs and JSON for integrating AI services.",
      "json": "Familiarity with REST APIs and JSON for integrating AI services.",
      "jupyter notebooks": "Experience with Jupyter Notebooks or VS Code for experimentation.",
      "data preprocessing": "Understanding of data preprocessing, text embeddings, and tokenization.",
      "text embeddings": "Understanding of data preprocessing, text embeddings, and tokenization.",
      "tokenization": "Understanding of data preprocessing, text embeddings, and tokenization.",
      "neural networks": "Neural networks and transformers (BERT, GPT, etc.)",
      "rag": "RAG (Retrieval Augmented Generation)",
      "embeddings": "Embeddings & vector search",
      "vector search": "Embeddings & vector search",
      "fine-tuning": "Fine-tuning and model evaluation",
      "model evaluation": "Fine-tuning and model evaluation",
      "hugging face": "Awareness of Hugging Face ecosystem and OpenAI API usage.",
      "openai api": "Awareness of Hugging Face ecosystem and OpenAI API usage.",
      "nosql": "Familiarity with NoSQL / vector databases (Chroma, Pinecone, FAISS, Milvus).",
      "vector databases": "Familiarity with NoSQL / vector databases (Chroma, Pinecone, FAISS, Milvus).",
      "fastapi": "Knowledge of FastAPI or Flask for backend integration.",
      "flask": "Knowledge of FastAPI or Flask for backend integration.",
      "cloud services": "Basic understanding of cloud services (AWS, GCP, or Azure)."
    },
    "req": {},
    "pref": {},
    "resp": {
      "design and implement llm-powered applications using frameworks such as langchain, llamaindex, or haystack.": "Design and implement LLM-powered applications using frameworks such as LangChain, LlamaIndex, or Haystack.",
      "develop prompt engineering pipelines and retrieval-augmented generation (rag) workflows.": "Develop prompt engineering pipelines and retrieval-augmented generation (RAG) workflows.",
      "work with vector databases (faiss, chroma, pinecone, weaviate, milvus) for semantic search and document retrieval.": "Work with vector databases (FAISS, Chroma, Pinecone, Weaviate, Milvus) for semantic search and document retrieval.",
      "fine-tune or adapt open-source llms (llama, mistral, falcon, gemma, etc.) for domain-specific tasks.": "Fine-tune or adapt open-source LLMs (LLaMA, Mistral, Falcon, Gemma, etc.) for domain-specific tasks.",
      "integrate ai apis (openai, anthropic, google gemini, etc.) into web or backend systems.": "Integrate AI APIs (OpenAI, Anthropic, Google Gemini, etc.) into web or backend systems.",
      "collaborate with backend teams to deploy ai models using fastapi, flask, or streamlit.": "Collaborate with backend teams to deploy AI models using FastAPI, Flask, or Streamlit.",
      "analyze and evaluate model performance (precision, recall, bleu, rouge, perplexity, etc.).": "Analyze and evaluate model performance (precision, recall, BLEU, ROUGE, perplexity, etc.).",
      "write efficient, production-quality python code for data preprocessing, model integration, and automation.": "Write efficient, production-quality Python code for data preprocessing, model integration, and automation.",
      "stay up-to-date with advancements in generative ai, transformer architectures, and mlops practices.": "Stay up-to-date with advancements in Generative AI, Transformer architectures, and MLOps practices."
    }
  },
  "conf": {
    "must": {
      "python": 0.9,
      "transformers": 0.6,
      "torch": 0.8,
      "langchain": 0.8,
      "sentence-transformers": 0.8,
      "chromadb": 0.8,
      "rest apis": 0.7,
      "json": 0.7,
      "jupyter notebooks": 0.6,
      "data preprocessing": 0.7,
      "text embeddings": 0.7,
      "tokenization": 0.7,
      "neural networks": 0.6,
      "rag": 0.8,
      "embeddings": 0.7,
      "vector search": 0.7,
      "fine-tuning": 0.7,
      "model evaluation": 0.7,
      "hugging face": 0.6,
      "openai api": 0.6,
      "nosql": 0.6,
      "vector databases": 0.6,
      "fastapi": 0.6,
      "flask": 0.6,
      "cloud services": 0.5
    },
    "req": {},
    "pref": {},
    "resp": {
      "design and implement llm-powered applications using frameworks such as langchain, llamaindex, or haystack.": 0.9,
      "develop prompt engineering pipelines and retrieval-augmented generation (rag) workflows.": 0.9,
      "work with vector databases (faiss, chroma, pinecone, weaviate, milvus) for semantic search and document retrieval.": 0.9,
      "fine-tune or adapt open-source llms (llama, mistral, falcon, gemma, etc.) for domain-specific tasks.": 0.9,
      "integrate ai apis (openai, anthropic, google gemini, etc.) into web or backend systems.": 0.9,
      "collaborate with backend teams to deploy ai models using fastapi, flask, or streamlit.": 0.9,
      "analyze and evaluate model performance (precision, recall, bleu, rouge, perplexity, etc.).": 0.9,
      "write efficient, production-quality python code for data preprocessing, model integration, and automation.": 0.9,
      "stay up-to-date with advancements in generative ai, transformer architectures, and mlops practices.": 0.9
    }
  },
  "hard_gate_evidence": {
    "degree_required": "B.E. / B.Tech / M.Tech / MCA in Computer Science, Artificial Intelligence, Data Science, or related fields.",
    "min_years": "Experience: 0–1 Years",
    "license": null,
    "work_auth": null,
    "clearance": null,
    "location_mode": "Location: [Hybrid / Onsite / Remote — e.g., Bangalore, Pune, Hyderabad]",
    "onsite_city": "Location: [Hybrid / Onsite / Remote — e.g., Bangalore, Pune, Hyderabad]",
    "shift": null,
    "travel": null
  }
}